# GraphQL schema example
#
# https://gqlgen.com/getting-started/

type User {
  id: ID!
  firstName: String!
  lastName: String!
  username: String!
  email: String!
  skills: [String!]!
}

type Project {
  id: ID!
  name: String!
  description: String!
  owner: User!
  public: Boolean!
  collaborators: [User!]!
  skills_needed: [String!]!
}
# nulls when not logged in
type Projects {
  public: [Project!]!
  owned: [Project!]
  collaborated: [Project!]
}

input NewUser {
  firstName: String!
  lastName: String!
  username: String
  password: String!
  email: String!
  skills: [String!]!
}
input UpdatedUser {
  firstName: String
  lastName: String
  username: String
  old_password: String
  new_password: String
  email: String
  skills: [String!]
}

input NewProject {
  name: String!
  description: String
  collaborators: [ID!]
  skills_needed: [String!]!
}

input UpdatedProject {
  name: String
  description: String
  collaborators: [ID!]
  skills_needed: [String!]
}

input RefreshTokenInput {
  token: String!
}

input Login {
  email: String
  username: String
  password: String!
}

type Query {
  users: [User!]!
  projects: Projects!
  project(id: ID!): Project
}

type Mutation {
  createUser(input: NewUser!): User!
  updateUser(input: UpdatedUser!): User!
  createProject(input: NewProject!): Project!
  updateProject(id: ID!, input: UpdatedProject!): Project!
  deleteProject(id: ID!): Boolean!
  login(input: Login!): String!
  refreshToken(input: RefreshTokenInput!): String!
}
